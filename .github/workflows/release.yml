name: Build and deploy release

# todo - set release title by some means other than from tagged commit
on:
  push:
    tags:
      - "v*"
env:
  CARGO_TERM_COLOR: always
  BIN_NAME: cvcap

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      # can remove the update when Rust 1.63 is in the default runner
      - name: Rust updates
        run: rustup update
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test --verbose

  build-all:
    runs-on: ${{matrix.os}}
    needs: test
    strategy:
      fail-fast: true
      matrix:
        # musl build not currently working with copypasta
        # (via x11-clipboard -> xkb I think)
        # target: [x86_64-pc-windows-gnu, x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl, x86_64-apple-darwin]
        target:
          [x86_64-pc-windows-gnu, x86_64-unknown-linux-gnu, x86_64-apple-darwin]
        os: [macos-latest, windows-latest, ubuntu-latest]
        exclude:
          - os: macos-latest
            target: x86_64-pc-windows-gnu
          - os: macos-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            target: x86_64-pc-windows-gnu

    steps:
      # can remove the update when Rust 1.63 is in the default runner
      - name: Rust updates
        run: rustup update
      - name: Add target deps
        run: rustup target add ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - uses: actions/checkout@v3

      - name: Build all
        run: cargo build --release --verbose --target ${{ matrix.target }}

      - name: Echo diagnostic info
        run: ls target/${{ matrix.target }}/release

      - name: create archive directory
        run: mkdir release
      - name: create archive (windows)
        if: ${{ contains(matrix.target, 'windows') }}
        uses: thedoctor0/zip-release@main
        with:
          # path and filename are relative to directory
          directory: "target/${{ matrix.target}}/release/"
          path: "${{env.BIN_NAME}}.exe"
          type: "zip"
          filename: "../../../release/${{ matrix.target }}.zip"
          exclusions: "*.d"
      - name: create archive
        # This doesn't work with 'windows' in double quotes.
        if: ${{ !contains(matrix.target, 'windows') }}
        uses: thedoctor0/zip-release@main
        with:
          directory: "target/${{ matrix.target}}/release/"
          path: "${{env.BIN_NAME}}"
          type: "zip"
          filename: "../../../release/${{ matrix.target }}.zip"
          exclusions: "*.d"
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./release/*
